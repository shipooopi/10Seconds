[gd_scene load_steps=4 format=1]

[ext_resource path="res://scenes/Player/icon.png" type="Texture" id=1]

[sub_resource type="RectangleShape2D" id=1]

custom_solver_bias = 0.0
extents = Vector2( 30.7997, 19.9311 )

[sub_resource type="GDScript" id=2]

script/source = "extends KinematicBody2D

# Variables
var sprite_node
var animation_player

var input_direction = 0
var direction = 1

var speed = Vector2()
var velocity = Vector2()

var jump_count = 0

# Constants
const MAX_SPEED = 900
const ACCELERATION = 3500
const DECELERATION = 6000
const SPEED_DIVISOR = 7

const JUMP_FORCE = 2000
const RELEASED_JUMP_FORCE = 800
const GRAVITY = 6000
const MAX_FALL_SPEED = 1400
# TODO: set to var to change on runtime
const MAX_JUMP_COUNT = 2






func _ready():
	set_process(true)
	set_process_input(true)
	sprite_node = get_node(\"Sprite\")
	animation_player = get_node(\"/root/World/AnimationPlayer\")
	animation_player.play(\"Idle\")
	

func _input(event):
	if (jump_count < MAX_JUMP_COUNT and event.is_action_pressed(\"jump\")):
		speed.y = -JUMP_FORCE
		jump_count += 1
	if (jump_count > 0 and event.is_action_released(\"jump\") and speed.y < -RELEASED_JUMP_FORCE):
		speed.y = -RELEASED_JUMP_FORCE
 
 
func _process(delta):
	# INPUT
	if Input.is_action_pressed(\"Restart\"):
		get_tree().reload_current_scene()
	
	if input_direction:
		direction = input_direction

	if Input.is_action_pressed(\"move_left\"):
		input_direction = -1
		sprite_node.set_flip_h(true)
	elif Input.is_action_pressed(\"move_right\"):
		input_direction = 1
		sprite_node.set_flip_h(false)
	else:
		input_direction = 0
	
	

	# MOVEMENT
	if input_direction == - direction:
		speed.x /= SPEED_DIVISOR

	if (input_direction):
		speed.x += ACCELERATION * delta
	else:
		speed.x -= DECELERATION * delta
		
	speed.x = clamp(speed.x, 0, MAX_SPEED)
	
	speed.y += GRAVITY * delta
	if (speed.y > MAX_FALL_SPEED):
		speed.y = MAX_FALL_SPEED
		
	velocity.x = speed.x * delta * direction
	velocity.y = speed.y * delta
	
	var movement_remainder = move(velocity)
	
	if (is_colliding()):
		# Not sure, which is better
#
#		if(get_collider().get_collision_mask() == 4):
#			get_tree().reload_current_scene()
#		if (get_collider().get_name() == \"Death\"):
			# TODO: Here Death!
			#pass
			
			
		var normal = get_collision_normal()
		var final_movement = normal.slide(movement_remainder)
		speed.y = normal.slide(Vector2(0,speed.y)).y
		
		move(final_movement)
		
		if (normal.y <= -0.7):
			jump_count = 0
	
	if( (not is_colliding() or get_collision_normal().y > -0.7) && speed.y > 0 && jump_count == 0):
		# Todo: ghost jump
		jump_count += 1
		
	
"

[node name="Player" type="KinematicBody2D"]

input/pickable = false
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 0.903499, 0, 0, 1.39159, 896.97, 631.211 )
shapes/0/trigger = false
collision/layers = 3
collision/mask = 3
collision/margin = 0.08
script/script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]

transform/pos = Vector2( 897.04, 630.702 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

transform/pos = Vector2( 896.97, 631.211 )
transform/scale = Vector2( 0.903499, 1.39159 )
shape = SubResource( 1 )
trigger = false
_update_shape_index = 0

[node name="Camera2D" type="Camera2D" parent="."]

transform/pos = Vector2( 219.391, 215.847 )
anchor_mode = 0
rotating = false
current = true
zoom = Vector2( 1, 1 )
limit/left = -1000000
limit/top = -10000000
limit/right = 10000000
limit/bottom = 10000000
drag_margin/h_enabled = true
drag_margin/v_enabled = true
smoothing/enable = true
smoothing/speed = 5.0
drag_margin/left = 0.2
drag_margin/top = 0.2
drag_margin/right = 0.2
drag_margin/bottom = 0.2


